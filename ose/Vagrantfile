# -*- mode: ruby -*-
# vi: set ft=ruby :
VAGRANTFILE_API_VERSION = "2"

unless Vagrant.has_plugin?("vagrant-hostmanager")
  raise 'vagrant-hostmanager plugin is required'
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.include_offline = true
  config.ssh.insert_key = false

  unless Vagrant.has_plugin?('vagrant-registration')
    raise 'vagrant-registration-plugin is required for enterprise deployment'
  end

  config.vm.provider "virtualbox" do |vbox, override|
    override.vm.box = "rhel-7.2"
    vbox.memory = 8192 
    vbox.cpus = 2

    # Enable multiple guest CPUs if available
    vbox.customize ["modifyvm", :id, "--ioapic", "on"]
  end

  config.vm.provider "libvirt" do |libvirt, override|
    libvirt.cpus = 2
    libvirt.memory = 1024
    libvirt.driver = 'kvm'
    override.vm.box = "rhel-7"
  end

  config.vm.define "master" do |master|
    master.vm.hostname = "ose3-master.example.com"
    master.vm.network :private_network, ip: "192.168.1.100"
    master.vm.network :forwarded_port, guest: 8443, host: 8443
    config.vm.provision "shell", inline: "nmcli connection reload; systemctl restart NetworkManager.service"
    master.vm.provision "shell", path: "reg.sh", run: "always"
    master.vm.provision "shell", path: "install.sh"
  end
end
